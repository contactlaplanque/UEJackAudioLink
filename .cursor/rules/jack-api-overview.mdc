---
description: JACK API overview and key concepts
---
# JACK API overview

Reference docs: [JACK API main page](https://jackaudio.org/api/index.html)

- **Model**: Real-time, callback-driven audio engine; all audio is 32-bit float. Clients register a process callback.
- **Core headers**:
  - `jack/jack.h` (main client API)
  - `jack/types.h` (types), `jack/transport.h` (transport), `jack/statistics.h` (perf), `jack/metadata.h` (metadata)
- **Basic flow (client)**:
  1. Open client: `jack_client_open`
  2. Register ports: `jack_port_register` with `JACK_DEFAULT_AUDIO_TYPE`
  3. Set callbacks: `jack_set_process_callback`, `jack_on_shutdown`, `jack_set_xrun_callback`
  4. Activate: `jack_activate`
  5. Connect ports: `jack_connect`/`jack_disconnect`
- **Discovery**:
  - List ports: `jack_get_ports`
  - Port info: `jack_port_name`, `jack_port_by_id`
- **Timing/config**:
  - Sample rate: `jack_get_sample_rate`
  - Buffer size: `jack_get_buffer_size`
  - CPU usage: `jack_cpu_load`
- **Port registration callback**:
  - `jack_set_port_registration_callback` signals dynamic graph changes (new/removed ports)

Notes for this repo:
- Keep JACK includes in Private `.cpp` or WITH_JACK-guarded code.
- Use minimal work in RT callbacks; avoid logging from the process thread.
